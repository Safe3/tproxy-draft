; Create new chain called "DIVERT" in the mangle table
iptables -t mangle -N DIVERT

; 
iptables -t mangle -A PREROUTING -p tcp -m socket -j DIVERT
iptables -t mangle -A DIVERT -j MARK --set-mark 1
iptables -t mangle -A DIVERT -j ACCEPT

ip rule add fwmark 1 lookup 100
ip route add local 0.0.0.0/0 dev lo table 100

iptables -t mangle -A PREROUTING -p tcp --dport 80 -j TPROXY --tproxy-mark 0x1/0x1 --on-port 8080






2 servers:

2.2.2.11	running:
	while (true) ; do
		echo "Wrong server!" | nc -l 80
	done
		
2.2.2.12	running:
	while (true) ; do
		echo "Correct server!" | nc -l 8080
	done
	
	
	
	
	
	
	
	
http://wiki.squid-cache.org/Features/Tproxy4#IPv6_Support
	# IPv4-only
	ip -f inet rule add fwmark 1 lookup 100
	ip -f inet route add local default dev eth0 table 100

	# IPv6-only
	ip -f inet6 rule add fwmark 1 lookup 100
	ip -f inet6 route add local default dev eth0 table 100
	
	
	echo 1 > /proc/sys/net/ipv4/ip_forward
	echo 2 > /proc/sys/net/ipv4/conf/default/rp_filter
	echo 2 > /proc/sys/net/ipv4/conf/all/rp_filter
	echo 0 > /proc/sys/net/ipv4/conf/eth0/rp_filter
	
	
	echo 1 > /proc/sys/net/ipv4/conf/all/forwarding
	echo 1 > /proc/sys/net/ipv4/conf/all/send_redirects
	echo 1 > /proc/sys/net/ipv4/conf/eth0/send_redirects
	
	
	
	
	# echo 201 theproxy >> /etc/iproute2/rt_tables
	# ip rule add fwmark 1 table theproxy
	# ip rule ls
	